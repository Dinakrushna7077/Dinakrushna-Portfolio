$(document).ready(function() {
  const params = new URLSearchParams(window.location.search);
  const id = parseInt(params.get("id"));

  if (!isNaN(id)) {
    GetProjectDetails(id);
  } else {
    console.error("Invalid project ID");
  }
});
window.addEventListener("load",  ()=> {
  const loader = document.querySelector(".loader");
  const content = document.getElementById("main-content");

  if (loader) loader.style.display = "none";
  if (content) content.style.display = "block";
  
    });

    const CMS = [
      {
        title: "Hero Section",
        image: "assets/Projects/cms/home.png",
        description: "Developed a Canteen Management System using Entity Framework, ASP.NET Core, and SQL Server. The system allows users to view menu items, place orders, and manage their accounts. It features a responsive design and secure user authentication."
      },
      // Add more projects as needed
      {
        title: "Meal Menu",
        image: "assets/Projects/cms/meal_list.png",
        description: "This shows the meal menu for the week with items for Breakfast, Lunch, Dinner, and Extra Meals each day. It helps to check out what items are available for the day."
      },
      {
        title: "About Our Canteen",
        image: "assets/Projects/cms/about-1.png",
        description: "Here you can learn about our canteen and explore some of our popular meals and extra items."
      },
      {
        title: "",
        image: "assets/Projects/cms/about-2.png",
        description: "This is the second part of the About Our Canteen section, where you can find more information about our services and offerings."
      },
      {
        title: "Admin Login",
        image: "assets/Projects/cms/admin login.png",
        description: "This page allows the admin to securely log in by entering their Mobile Number and password. Access is granted only to authorized users to manage the system."
      },
      {
        title: "Admin home",
        image: "assets/Projects/cms/admin home.png",
        description: "After logging in, the admin can access all functionalities through the navbar and the menu dropdown for easy navigation and management."
      },
      {
        title: "New Customer Registration",
        image: "assets/Projects/cms/new customer.png",
        description: `This page allows the admin to add new customers by entering their details.\n
          The Canteen Number is a unique ID for each customer. It is created using the last two digits of the current year followed by the number of customers registered in that year.\n
          For example, if the current year is 2025 and this is the 133rd customer, the Canteen Number will be 25133.\n
          The Password is auto-generated by combining the first four letters of the customer's name in uppercase, followed by an asterisk (*) and the Canteen Number.\n
          For example, if the customer's name is "Dinakrushna Mohanta" and the Canteen Number is 25133, the password will be "DINA*25133".`
      },
      {
        title: "Attendance Management",
        image: "assets/Projects/cms/attendance-1.png",
        description: "It displays the list of customers/students whose meal status is on for the current day."
      },
      {
        title: "",
        image: "assets/Projects/cms/attendance-2.png",
        description: "The admin can mark the attendance of students/customers for Breakfast, Lunch, Dinner, and Extra Meals by clicking the respective buttons: 'Y' if the meal is taken, and 'N' if the student/customer does not want to eat. Based on the marked attendance, the price will be calculated and shown in the total price section."
      },
      {
        title: "",
        image: "assets/Projects/cms/attendance-3.png",
        description: "If a student/customer takes an extra meal, the admin can select the item from the dropdown. The price will be shown in the 'Extra Price' section and added to the total price by clicking the <b>Add Extra</b> button.."
      },
      {
        title: "",
        image: "assets/Projects/cms/attendance-4.png",
        description: "When I select an extra item, such as <b>Mushroom</b>, the extra price is displayed and the <b>Add Extra</b> button is enabled. I can now click the <b>Add Extra</b> button to apply it.."
      },
      {
        
        title: "",
        image: "assets/Projects/cms/attendance-5.png",
        description: "Now the price of the extra item is added to the <b>Total Price</b>."
      },
      {
        id: 13,
        title: "Meal On/Off",
        image: "assets/Projects/cms/meal on off-admin-2.png",
        description: "This page allows the admin to turn on or off the meal service for a customer. If the meal is turned off, the customer will not be charged for that day's meals. Meal can be turned on/off by using the Canteen Number of the Customer.First Checkout the customer by clicking the <b>Checkout</b> button, then turn on/off the meal by clicking the <b>Meal On/Off</b> button. The meal will be turned off for the customer with Canteen Number 25133."
      },
      {
        id: 14,
        title: "",
        image: "assets/Projects/cms/meal on off-admin-3.png",
        description: "This is the second image of the Meal On/Off page, we can see the meal is off for the customer with Canteen Number 25133."
      },
      {
        id: 15,
        title: "Monthly Attendance and amount",
        image: "assets/Projects/cms/monthly rec-adm 1.png",
        description: "The admin can check the attendance and amount of a customer for the current month by entering the Canteen Number in the input field and clicking the <b>Check</b> button. The attendance and amount will be displayed below. and month will be selected by default as the current month, also can check other months by selecting the month Number 1-12 available in the bottom of the page."
      },
      {
        id: 16,
        title: "",
        image: "assets/Projects/cms/monthly rec-adm 2.png",
        description: "In this image, we can see the attendance and amount of the customer with Canteen Number 22133 for the month of may. The total amount for the month is displayed at the bottom."
      },
      {
        title: "Online Payment Request",
        image: "assets/Projects/cms/op request-1.png",
        description: "In this page, the admin can check the online payment requests made by customers. The admin can approve or reject the payment request by clicking the <b>Approve</b> or <b>Reject</b> button after verifying the Transaction ID and Screenshot by clicking the <b>view</b> button. The payment request will be approved for the customer with Canteen Number 22133."
      },
      {
        title: "",
        image: "assets/Projects/cms/op request-2.png",
        description: "In this page we can see the payment received message is pop up after the admin approves the payment request. The payment request is approved for the customer with Canteen Number 22133. and this amount will be reduced from the total amount of the customer. Like this if admin reject the payment request, the amount will not be reduced from the total amount of the customer and a message will be pop up saying <b>Payment Request Rejected</b>."
      },
      {
        title: "Due Amount",
        image: "assets/Projects/cms/due amount adm1.png",
        description: "In this page Admin can view the list of due amount of customer in table format. The table contains the Sl No. , Canteen Number, Pending Amount of each customer. The customer rows will be highlighted in red if the pending amount is greater than 5000  or equals and in light blue if the pending amount is less than 5000."
      },
      {
        title: "Cash Payment",
        image: "assets/Projects/cms/cash payment receive 1.png",
        description: "In this page admin can enter the Canteen Number of the customer/student,the due amount will be displayed. After filling the form, the admin can click the <b>Submit</b> button to update the customer's total amount. The total amount will be reduced by the amount paid."
      },
      {
        title: "New Extra Item",
        image: "assets/Projects/cms/new extra item.png",
        description: "In this page Admin can add new Extra item and set the price for that. This Extra item will be shown in the Extra Item dropdown in the Attendance Management page. "
      },
      {
        title: "Change Password",
        image: "assets/Projects/cms/change pass adm-1.png",
        description: "In this page Admin can change the password by entering the old password and new password. The new password should be at least 8 characters long and should contain at least one uppercase letter, one lowercase letter, one number."
      },
      {
        title: "Logout",
        image: "assets/Projects/cms/logout-2.png",
        description: "When Admin Finish the work, click the <b>Logout</b> button. This will log out the admin and redirect to the Home Page"
      },
      {
        title: "Customer/Student Login",
        image: "assets/Projects/cms/std login.png",
        description: "This is the login page for customers/students. They can log in using their Mobile Number and Password or e-mail id and Passowrd. The password is auto-generated by the admin when a new customer is registered."
      },
      {
        title: "Student/Customer Home",
        image: "assets/Projects/cms/std home.png",
        description: "Customer/Student access will be available in the nav-bar and menu dropdown ."
      },
      {
        title: "Meal On/Off(Student)",
        image: "assets/Projects/cms/meal on off.png",
        description: "On this page, the customer/student can turn the meal service on or off for a specific day. Once the meal status is changed, it cannot be modified again for that day. The change is made by clicking the <b>On/Off</b> button. The request will then be sent to the admin for approval."
      },
      {
        title: "",
        image: "assets/Projects/cms/meal request.png",
        description: "This is the second image of the Meal On/Off page, after requesting the meal on/off, the customer/student should wait for approve. If the request is approved by the admin, the meal will be turned on/off for that day."
      },
      {
        title: "View Attendance",
        image: "assets/Projects/cms/view rec-2.png",
        description: "In this page Student/Customer can see their month wise attendance and amount.In this image we can see the attendance and amount of the customer with Canteen Number 22133 for the month of May. The total amount for the month is displayed at the bottom."
      },
      {
        title: "",
        image: "assets/Projects/cms/view record.png",
        description: "In this image we can see the attendance and amount of the customer with Canteen Number 22133 for the month of april."
      },
      {
        title: "Online Payment Request",
        image: "assets/Projects/cms/online payment-1.png",
        description: "In this page Customer/Student can make payment by the QR code and take the screenshot of the transaction, There after fill this form and submit the payment request. This will send the request to the admin. The admin will verify the transaction ID and screenshot, and then approve or reject the payment request. If approved, the amount will be deducted from the total amount of the customer."
      },
      {
        title: "Payment History",
        image: "assets/Projects/cms/payment history-1.png",
        description: "In this page Logined Student/Customer can see their payment history. The table contains the Sl No., Before Payment,Paid Amount, Payment Method, and Receiver. The payment method can be either Cash or Online."
      },
      {
        title: "",
        image: "assets/Projects/cms/payment history-2.png",
        description: "This is the second image of the Payment History page, where we can see the payment history."
      }
    ];
    
    const GetProjectDetails=(n)=>
    {
      switch(n)
      {
        case 1:
           ProjectDetails(CMS);
           break;
        case 2:
          ProjectDetails(urban_basket);
          break;
        case 3:
          ProjectDetails(urban_banking);
          break;
        case 4:
          ProjectDetails(Learning_Platform);
          break;
      }
    }
    const ProjectDetails=(proj)=>
    {
      const container=$("#project-container");
      let n=1;
      proj.forEach(project => {
        const projectCard = `
          <div class="project-card mb-4">
            <div class="text-end px-3"><span class="page-no">Page No - ${n++}</span></div>
            <img src="${project.image}" alt="${project.title}" class="project-image">
            <div class="project-content p-1">
              <h1>${project.title}</h1>
              <p>${project.description}</p>
            </div>
          </div>
        `;
        container.append(projectCard);
      });
    }

     const urban_banking = [
      {
        title: "Banking Platform(Urban Banking)",
        image: "assets/Projects/Urban Banking/home.png",
        description: "This is the home page of the Urban Banking project, which is a banking platform developed using ASP.NET Core, Entity Framework, and SQL Server. The platform Admin to manage the users accounts, and users can perform banking operations like fund transfer, view transaction history, etc. The following are the images of the project.",
      },
      {
        title: "About Urban Banking",
        image: "assets/Projects/Urban Banking/about.png",
        description: "This is the about page of the Urban Banking project, which provides information about the project and its features.",
      },
      {
        title: "Contact Us",
        image: "assets/Projects/Urban Banking/about_Contact.png",
        description: "This is the contact page of the Urban Banking project, which provides information about how to contact the bank for any queries or issues.",
      },
      {
        title: "Login Page",
        image: "assets/Projects/Urban Banking/login.png",
        description: "This is the login page of the Urban Banking project, where both admin and users can log in using their email and password after successfully loged in they will be redirect to their respected page. If the user is not registered, they can register using the <b>User Registration</b> link.",
      },
      {
        title: "Admin Dashboard",
        image: "assets/Projects/Urban Banking/admin dashboard.png",
        description: "This is the admin dashboard page, where the admin can access all functionalities. The admin can manage account, make transaction, and perform other administrative tasks. In this image, new account create form is shown, where the admin can create a new user account by entering the required details",
      },
      {
        title: "Deposite",
        image: "assets/Projects/Urban Banking/Deposite.png",
        description: "This is the deposite page, where the admin can deposit money into users account. The admin have to endter users account number. After entering the account number name, IFSC code will be filled automatically. After entering the amount, the admin can click the <b>Deposit</b> button to deposit the money into the users account.",
      },      
    ];
     const urban_basket = [
      {
        title: "Urban Basket(Online Shopping)",
        image: "assets/Projects/Urban Basket/Home page.png",
        description: "Developed an Online Shopping System using Entity Framework, ASP.NET MVC, and SQL Server. The system allows users to browse Category wise products, add them to the cart, and make secure payments. This is my first project in ASP.NET MVC, which I completed during my Graduate studies. It features secure user authentication to unauthorized access. The following are the images of the project.",
      },
      // Add more projects as needed
      {
        title: "Home Page",
        image: "assets/Projects/Urban Basket/Home page 2.png",
        description: "This is Home page, each refresh gives different arrangement of cartegory and it can be access by user without login."
      },
      {
        title: "New User Registration",
        image: "assets/Projects/Urban Basket/user registration.png",
        description: "Using this page user can register by entering the details like Name, Email, Password, and Mobile Number. After registration user can login using the email and password."
      },
      {
        title: "User Login",
        image: "assets/Projects/Urban Basket/user login.png",
        description: "This is the login page for users. They can log in using their Email and Password. If the user is not registered, they can register using the <b>New User Registration</b> link.login using the email and password."
      },
      {
        title: "User Home Page",
        image: "assets/Projects/Urban Basket/user home access.png",
        description: "The user is redirected to this page after successfully logging in, where they can access all available user functionalities. The user can view the products by category, add them to the cart, and make secure payments. The user can also view their order history."
      },
      {
        title: "Explore Products",
        image: "assets/Projects/Urban Basket/product 1.png",
        description: "This page allows the user to explore products by category. The user can view the products in each category. The user can also search for products by name using the search bar at the top of the page."
      },
      {
        title: "",
        image: "assets/Projects/Urban Basket/product 2.png",
        description: "This is the second image of the Explore Products according to the Category."
      },
      {
        title: "Search Products",
        image: "assets/Projects/Urban Basket/search result.png",
        description: "This page shows the search results for the products. The user can search for products by name using the search bar at the top of the page. The search results are displayed in a grid format."
      },
      {
        title: "Product Details",
        image: "assets/Projects/Urban Basket/product details.png",
        description: "This page shows the details of the product. The user can view the product name, price, description, and image. The user can also add the product to the cart by clicking the <b>Add to Cart</b> button. If the user is not logged in, they will be redirected to the login page."
      },
      {
        title: "Add to Cart",
        image: "assets/Projects/Urban Basket/add to cart.png",
        description: "This page shows the products added to the cart by the user. If a product is already in the cart, a <b>Go to Cart</b> button is shown; otherwise, an <b>Add to Cart</b> button is displayed.If user click on the <b>Go to Cart</b> button the product will be added to the cart. The user can view the total price of the products in the cart. If user click on <b>Buy Now</b> button, the user will be redirected to the payment page."
      },
      {
        title: "Cart",
        image: "assets/Projects/Urban Basket/my cart.png",
        description: "This page displays the products added to the cart by the user, along with the total price and the default delivery address. Users can remove a product from the cart by clicking the <b>Delete</b> icon. By clicking the <b>Buy Now</b> button, the user will be redirected to the payment page."
      },
      {
        title: "Select Delivery Address",
        image: "assets/Projects/Urban Basket/address to deliver.png",
        description: "This page allows the user to select a delivery address for the order. The user can choose from the existing addresses or add a new address by clicking the <b>Add Address</b> button and select the payment method. I keep only cash on delivery option for payment method. After selecting the address, the user can proceed to the order summary page by clicking the <b>Continue</b> button."
      },
      {
        title: "Edit Address",
        image: "assets/Projects/Urban Basket/change address.png",
        description: "This page allows the user to edit the delivery address. The user can update the address details and click the <b>Save Changes</b> button to save the changes. After updating the address, the user will be redirected to the Select Delivery Address page."
      },
      {
        title: "Order Summary",
        image: "assets/Projects/Urban Basket/ordering details.png",
        description: "This page shows the order summary, including the products, total price, and delivery address. place the order by clicking the <b>Place Order</b> button. The payment method is Cash on delivery only."
      },
      {
        title: "Confirm Order",
        image: "assets/Projects/Urban Basket/Confirm order.png",
        description: "This is the confirmation page after placing the order. The user can confirm the order by clicking the <b>Confirm Order</b> button. After confirming the order, the user will be redirected to the order history page."
      },
      {
        title: "Order Success Animation",
        image: "assets/Projects/Urban Basket/order success animation.png",
        description: "This is the success animation after placing the order. The user can view the order details and the order ID. The user can also view the order history by clicking the <b>View Order History</b> button."
      },
      {
        title: "Order Success",
        image: "assets/Projects/Urban Basket/order success.png",
        description: "This is the page after the order is successfully placed. The user can also view the order history by clicking the <b>Order Details</b> button. The user can also continue shopping by clicking the <b>Continue Shopping</b> button."
      },
      {
        title: "Order History",
        image: "assets/Projects/Urban Basket/Order history1.png",
        description: "This page shows the order history of the user. The user can view the order details by clicking on the orders."
      },
      {
        title: "",
        image: "assets/Projects/Urban Basket/order history2.png",
        description: "This is the second image of the Order History page, where we can see the order history of the user."
      },
      {
        title: "Order Details",
        image: "assets/Projects/Urban Basket/Order_Details.png",
        description: "This page shows the details of the order. The user can view products, total price, delivery address, and payment method. The user can also cancel the order by clicking the <b>Cancel Order</b> button if the order is not delivered."
      },
      {
        title: "Direct Buy",
        image: "assets/Projects/Urban Basket/direct buy.png",
        description: "User can directly buy a product by clicking the <b>Buy Now</b> button. This will redirect the user to the Select Delivery Address page, where they can select the delivery address and payment method."
      },
      {
        title: "",
        image: "assets/Projects/Urban Basket/direct buy 2.png",
        description: "This is the redirect page after clicking the <b>Buy Now</b> button. The user can select the delivery address and payment method. After selecting the address, the user can proceed to the order summary page by clicking the <b>Continue</b> button."
      },
      {
        title: "",
        image: "assets/Projects/Urban Basket/direct buy3.png",
        description: "This is the order summary page after clicking the <b>Buy Now</b> button. The user can view the order details and total price. The user can proced to order by clicking the <b>Place Order</b> button."
      },
      {
        title: "Admin Login",
        image: "assets/Projects/Urban Basket/admin login.png",
        description: "This is the login page for the admin. The admin can log in using the email and password."
      },
      {
        title: "Admin Home Page",
        image: "assets/Projects/Urban Basket/admin dashboard.png",
        description: "This is the Admin Dashboard page, where the admin can access all functionalities."
      },
      {
        title: "Add New Category",
        image: "assets/Projects/Urban Basket/new category.png",
        description: "In this page, the admin can add a new category by entering the category name and Uploading Category Image and thereafter clicking the <b>Add Category</b> button. The new category will be added to the database and will be available for the user to explore products by category."
      },
      {
        title: "Upload Product",
        image: "assets/Projects/Urban Basket/new product.png",
        description: "In this page, the admin can upload a new product by Selecting the category and entering the  product details such as Product Name, Price, Description and product Image. After filling the form, the admin can click the <b>Submit</b> button to add the product to the database."
      },
      {
        title: "View Categories",
        image: "assets/Projects/Urban Basket/all category.png",
        description: "In this page, the admin can view all the categories added to the database. The admin can also delete a category by clicking the <b>Delete</b> Button. And the admin can also edit the category by clicking the <b>Edit</b> button."
      },
      {
        title: "Edit Category",
        image: "assets/Projects/Urban Basket/edit category.png",
        description: "In this page, the admin can edit the category by entering the new category name and uploading the new category image. After filling the form, the admin can click the <b>Save</b> button to update the category in the database."
      },
      {
        title: "Order Management",
        image: "assets/Projects/Urban Basket/order details in admin.png",
        description: "In this page, the admin can view all the order requests made by the users. The admin can Accept or Reject the order by clicking the <b>Accept</b> or <b>Reject</b> button."
      },
      {
        title: "Delivery Management",
        image: "assets/Projects/Urban Basket/order details indelivery.png",
        description: "In this page, the admin can view all the orders that are in delivery. The admin can mark the order as delivered by clicking the <b>Delivered</b> button or can cancel the order by clicking the <b>Cancel</b> Button. After marking the order as delivered/Canceled, the order status will be reflect on respected users order history page."
      }      
    ];
     const Learning_Platform = [
      {
        title: "E-Learning Platform",
        image: "assets/Projects/E-Learning/home.png",
        description: "Developong an E-Learning Platform in our friend circle to improve CI/CD in GitHub, using ASP.NET MVC, Entity Framework, and SQL Server. The platform allows students to register, log in, and access various courses. It features a user-friendly interface and secure user authentication.This is home page and following are the images of the project.",
      },
      {
        title: "About Page",
        image: "assets/Projects/E-Learning/about1.png",
        description: "This is the about page of the E-Learning Platform, which provides information about the platform and its features.",
      },
      {
        title: "",
        image: "assets/Projects/E-Learning/about2.png",
        description: "This is the second part of the about page, which provides more information about the platform and its features.",
      },
      {
        title: "",
        image: "assets/Projects/E-Learning/about3.png",
        description: "This is the third part of the about page, which provides more information about the platform and its features.",
      },
      {
        title: "Footer",
        image: "assets/Projects/E-Learning/footer.png",
        description: "This is the footer of the E-Learning Platform, which provides links to the contact page and social media pages.",
      }
    ]